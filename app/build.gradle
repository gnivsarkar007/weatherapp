apply plugin: "com.android.application"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'



if (!file("local.gradle").exists()) {
    exec {
        commandLine "sh"
        args = ["-c", "cp local.gradle.example local.gradle"]
    }
}

apply from: "local.gradle"

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.rtl.android.assignment"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "WEATHERS_BASE_URL", "\"https://api.openweathermap.org/data/2.5/\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs = ['-Xjvm-default=enable']
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }
    namespace 'com.rtl.android.assignment'
}

dependencies {
    def room_version = "2.5.2"
    def dagger = "2.46.1"
    def retrofit = "2.9.0"
    def junit = "4.13.2"
    def accompanist = "0.23.1"
    def places = "3.2.0"
    def compose_foundation ="1.4.3"
    def compose_tooling ="1.4.2"

    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"

    testImplementation "junit:junit:$junit"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation "androidx.arch.core:core-testing:2.2.0"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.core:core-ktx:1.10.1"
    implementation 'com.google.android.material:material:1.9.0'
    implementation "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"


    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "com.squareup.moshi:moshi-kotlin:1.13.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"

    implementation "androidx.compose.ui:ui:$compose_tooling"
    implementation "androidx.compose.ui:ui-tooling:$compose_tooling"
    implementation "androidx.compose.foundation:foundation:$compose_foundation"
    implementation "androidx.compose.material:material:$compose_foundation"
    implementation "androidx.activity:activity-compose:1.7.2"
    implementation "io.coil-kt:coil-compose:2.2.2"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist"
    implementation "com.google.android.libraries.places:places:$places"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    def nav_version = "2.6.0"

    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
}

